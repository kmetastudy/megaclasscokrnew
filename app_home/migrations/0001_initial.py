# Generated by Django 5.2.1 on 2025-06-13 14:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0004_remove_class_teacher_classteacher_class_teachers'),
        ('teacher', '0009_alter_chasi_is_published'),
    ]

    operations = [
        migrations.CreateModel(
            name='DailyReflection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('promise_number', models.IntegerField(verbose_name='약속 번호')),
                ('week', models.IntegerField(verbose_name='주차')),
                ('day', models.IntegerField(verbose_name='요일')),
                ('reflection_text', models.TextField(verbose_name='소감')),
                ('reflection_date', models.DateField(verbose_name='실천 날짜')),
                ('reflection_time', models.TimeField(verbose_name='실천 시간')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='작성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('is_evaluated', models.BooleanField(default=False, verbose_name='평가 여부')),
            ],
            options={
                'verbose_name': '일일 소감',
                'verbose_name_plural': '일일 소감들',
                'ordering': ['promise_number', 'week', 'day'],
            },
        ),
        migrations.CreateModel(
            name='DailyReflectionEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(choices=[(3, '😊 매우 잘함'), (2, '😄 잘함'), (1, '😐 보통')], verbose_name='점수')),
                ('emoji_feedback', models.CharField(choices=[('great', '🌟'), ('good', '👍'), ('nice', '💪'), ('fighting', '🔥'), ('smile', '😊')], max_length=10, verbose_name='이모지')),
                ('comment', models.CharField(blank=True, max_length=100, verbose_name='코멘트')),
                ('has_stamp', models.BooleanField(default=False, verbose_name='스탬프 부여')),
                ('evaluated_at', models.DateTimeField(auto_now_add=True, verbose_name='평가일')),
                ('reflection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='evaluation', to='app_home.dailyreflection')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.teacher')),
            ],
            options={
                'verbose_name': '일일 소감 평가',
                'verbose_name_plural': '일일 소감 평가들',
            },
        ),
        migrations.CreateModel(
            name='HealthHabitTracker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('promises', models.JSONField(default=dict, verbose_name='약속 목록')),
                ('final_reflection', models.TextField(blank=True, verbose_name='최종 소감')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('submitted_at', models.DateTimeField(blank=True, null=True, verbose_name='제출일')),
                ('is_submitted', models.BooleanField(default=False, verbose_name='제출 여부')),
                ('slide', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teacher.chasislide')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_habits', to='accounts.student')),
            ],
            options={
                'verbose_name': '건강 습관 기록',
                'verbose_name_plural': '건강 습관 기록들',
                'ordering': ['-created_at'],
                'unique_together': {('student', 'slide')},
            },
        ),
        migrations.AddField(
            model_name='dailyreflection',
            name='tracker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reflections', to='app_home.healthhabittracker'),
        ),
        migrations.CreateModel(
            name='TrackerEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(choices=[('A', '🏆 최우수'), ('B', '🥇 우수'), ('C', '🥈 보통'), ('D', '🥉 노력 필요')], max_length=1, verbose_name='등급')),
                ('total_score', models.IntegerField(default=0, verbose_name='종합 점수')),
                ('badges', models.JSONField(default=list, verbose_name='획득 뱃지')),
                ('feedback', models.TextField(verbose_name='종합 피드백')),
                ('evaluated_at', models.DateTimeField(auto_now_add=True, verbose_name='평가일')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.teacher')),
                ('tracker', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='overall_evaluation', to='app_home.healthhabittracker')),
            ],
            options={
                'verbose_name': '종합 평가',
                'verbose_name_plural': '종합 평가들',
            },
        ),
        migrations.AlterUniqueTogether(
            name='dailyreflection',
            unique_together={('tracker', 'promise_number', 'week', 'day')},
        ),
    ]
