"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-x49h7ss)z0g^+ke$ead*ua+24$zj$x=@!d_-x6dou3z+sw&g#s'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# settings.py에 추가할 디버깅 설정

# Gemini AI API 설정
GEMINI_API_KEY = os.environ.get('GEMINI_API_KEY', 'AIzaSyAP04dk1CIbnhvtCqVuxIWRXr03ff_Cnqo')

# CP Agent 관련 설정
CP_AGENT_SETTINGS = {
    'MAX_PROMPT_LENGTH': 10000,  # 최대 프롬프트 길이
    'MAX_RESPONSE_LENGTH': 8000,  # 최대 응답 길이
    'DEFAULT_DIFFICULTY': 'medium',  # 기본 난이도
    'DEFAULT_ESTIMATED_TIME': 300,  # 기본 예상 시간 (초)
    'SUPPORTED_QUESTION_TYPES': [
        'multiple_choice',
        'true_false', 
        'short_answer',
        'essay',
        'matching',
        'multiple_select'
    ],
    'AUTO_SAVE_INTERVAL': 30,  # 자동 저장 간격 (초)
    'IMAGE_UPLOAD_MAX_SIZE': 10 * 1024 * 1024,  # 10MB
    'ALLOWED_IMAGE_TYPES': ['image/jpeg', 'image/png', 'image/gif', 'image/webp'],
}

# 로깅 설정 (CP Agent 전용)
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'cp_agent_file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'logs/cp_agent.log',
            'formatter': 'verbose',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'loggers': {
        'cp_agent': {
            'handlers': ['cp_agent_file', 'console'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}

# 1. CSRF 디버깅을 위한 임시 설정 (개발환경에서만 사용)
if DEBUG:
    # CSRF 실패 시 자세한 로그 출력
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'handlers': {
            'console': {
                'class': 'logging.StreamHandler',
            },
        },
        'loggers': {
            'django.security.csrf': {
                'handlers': ['console'],
                'level': 'DEBUG',
                'propagate': True,
            },
        },
    }

# 2. 세션 및 쿠키 설정 확인
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SECURE = False  # 개발환경에서는 False
CSRF_COOKIE_HTTPONLY = False   # JavaScript에서 접근 가능하도록
CSRF_COOKIE_SECURE = False     # 개발환경에서는 False

# 3. 허용된 호스트 확인
ALLOWED_HOSTS = ['*']

# 4. 임시로 CSRF를 완전히 비활성화 (문제 진단 후 다시 활성화해야 함)
# MIDDLEWARE에서 아래 라인을 주석 처리
# 'django.middleware.csrf.CsrfViewMiddleware',

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts',
    'teacher', 
    'student','app_home','rolling',
    'new_cp','super_agent','ncs',
   
    # 'learning_app',  # 학습 관리 앱
]

# 3. 인증 백엔드 확인
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# 미디어 파일 설정
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# 정적 파일 설정
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'fstatic'
STATICFILES_DIRS = [BASE_DIR / 'static']

# 언어 및 시간 설정
LANGUAGE_CODE = 'ko-kr'
TIME_ZONE = 'Asia/Seoul'
USE_I18N = True
USE_TZ = False

# 파일 업로드 설정
FILE_UPLOAD_MAX_MEMORY_SIZE = 10 * 1024 * 1024  # 10MB
DATA_UPLOAD_MAX_MEMORY_SIZE = 10 * 1024 * 1024  # 10MB

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField' 

# # 1. LOGIN_URL 설정 (로그인이 필요한 뷰에서 리다이렉트될 URL)
# LOGIN_URL = '/accounts/login/'  # 실제 로그인 URL로 변경
# LOGIN_REDIRECT_URL = '/'  # 로그인 후 리다이렉트될 URL

# # 2. 세션 설정 확인
# SESSION_COOKIE_AGE = 3600  # 1시간 (필요에 따라 조정)
# SESSION_SAVE_EVERY_REQUEST = True
# SESSION_EXPIRE_AT_BROWSER_CLOSE = False
# SESSION_COOKIE_AGE = 86400  # 24시간
# SESSION_SAVE_EVERY_REQUEST = True
# SESSION_EXPIRE_AT_BROWSER_CLOSE = False

